// Generated by data binding compiler. Do not edit!
package com.aligmohammad.doctorapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.aligmohammad.doctorapp.R;
import com.aligmohammad.doctorapp.data.model.Doctor;
import com.aligmohammad.doctorapp.ui.adapters.OnMenuItemClick;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class DoctorListItemBinding extends ViewDataBinding {
  @NonNull
  public final ImageView doctorImage;

  @NonNull
  public final TextView doctorLocation;

  @NonNull
  public final TextView doctorName;

  @NonNull
  public final RatingBar doctorRating;

  @NonNull
  public final LinearLayout middleSectionLinear;

  @NonNull
  public final ImageView nextImageView;

  @Bindable
  protected Doctor mData;

  @Bindable
  protected OnMenuItemClick mListener;

  protected DoctorListItemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView doctorImage, TextView doctorLocation, TextView doctorName, RatingBar doctorRating,
      LinearLayout middleSectionLinear, ImageView nextImageView) {
    super(_bindingComponent, _root, _localFieldCount);
    this.doctorImage = doctorImage;
    this.doctorLocation = doctorLocation;
    this.doctorName = doctorName;
    this.doctorRating = doctorRating;
    this.middleSectionLinear = middleSectionLinear;
    this.nextImageView = nextImageView;
  }

  public abstract void setData(@Nullable Doctor data);

  @Nullable
  public Doctor getData() {
    return mData;
  }

  public abstract void setListener(@Nullable OnMenuItemClick listener);

  @Nullable
  public OnMenuItemClick getListener() {
    return mListener;
  }

  @NonNull
  public static DoctorListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.doctor_list_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DoctorListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DoctorListItemBinding>inflateInternal(inflater, R.layout.doctor_list_item, root, attachToRoot, component);
  }

  @NonNull
  public static DoctorListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.doctor_list_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DoctorListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DoctorListItemBinding>inflateInternal(inflater, R.layout.doctor_list_item, null, false, component);
  }

  public static DoctorListItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DoctorListItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (DoctorListItemBinding)bind(component, view, R.layout.doctor_list_item);
  }
}
