// Generated by data binding compiler. Do not edit!
package com.aligmohammad.doctorapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.aligmohammad.doctorapp.R;
import com.aligmohammad.doctorapp.ui.fragments.insurancefragment.InsuranceViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class InsuranceFragmentBinding extends ViewDataBinding {
  @NonNull
  public final Button confirmButton;

  @NonNull
  public final Spinner insuranceCompanySpinner;

  @NonNull
  public final EditText insuranceNumberEditText;

  @NonNull
  public final TextView insuranceNumberTextView;

  @NonNull
  public final TextView insuranceTextView;

  @NonNull
  public final ImageView logo;

  @NonNull
  public final Button skipButton;

  @Bindable
  protected InsuranceViewModel mViewModel;

  protected InsuranceFragmentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button confirmButton, Spinner insuranceCompanySpinner, EditText insuranceNumberEditText,
      TextView insuranceNumberTextView, TextView insuranceTextView, ImageView logo,
      Button skipButton) {
    super(_bindingComponent, _root, _localFieldCount);
    this.confirmButton = confirmButton;
    this.insuranceCompanySpinner = insuranceCompanySpinner;
    this.insuranceNumberEditText = insuranceNumberEditText;
    this.insuranceNumberTextView = insuranceNumberTextView;
    this.insuranceTextView = insuranceTextView;
    this.logo = logo;
    this.skipButton = skipButton;
  }

  public abstract void setViewModel(@Nullable InsuranceViewModel viewModel);

  @Nullable
  public InsuranceViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static InsuranceFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.insurance_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static InsuranceFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<InsuranceFragmentBinding>inflateInternal(inflater, R.layout.insurance_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static InsuranceFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.insurance_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static InsuranceFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<InsuranceFragmentBinding>inflateInternal(inflater, R.layout.insurance_fragment, null, false, component);
  }

  public static InsuranceFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static InsuranceFragmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (InsuranceFragmentBinding)bind(component, view, R.layout.insurance_fragment);
  }
}
